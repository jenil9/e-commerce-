<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Home</title>
  <style>
    /* your existing CSS */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
      font-family: Arial, sans-serif;
    }
    body {
      overflow-x: hidden;
    }
    nav {
      background-color: #333;
      color: white;
      padding: 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    .menu-btn {
      font-size: 1.5rem;
      cursor: pointer;
    }
    .sidebar {
      position: fixed;
      top: 0;
      left: -250px;
      width: 250px;
      height: 100%;
      background-color: #444;
      color: white;
      padding: 1rem;
      transition: left 0.3s ease-in-out;
      z-index: 1000;
    }
    .sidebar.active {
      left: 0;
    }
    .sidebar h3 {
      margin-bottom: 1rem;
      cursor: pointer;
    }
    .sidebar ul {
      list-style: none;
      padding: 0;
    }
    .sidebar ul li {
      margin: 10px 0;
      cursor: pointer;
    }
    .grid {
      display: flex;
      flex-wrap: wrap;
      gap: 20px;
      margin-top: 20px;
      justify-content: center;
    }
    .product-card {
      background-color: white;
      border-radius: 10px;
      box-shadow: 0 2px 8px rgba(0,0,0,0.1);
      padding: 15px;
      width: calc(33.333% - 20px);
      box-sizing: border-box;
      transition: transform 0.3s ease;
      text-align: center;
    }
    .product-card:hover {
      transform: scale(1.03);
    }
    .product-card img {
      width: 100%;
      height: auto;
      max-height: 180px;
      object-fit: cover;
      border-radius: 8px;
    }
    .product-card h3 {
      margin: 10px 0 5px;
    }
    .product-card p {
      margin: 0 0 10px;
      color: #666;
    }
    .price {
      font-weight: bold;
      color: #007BFF;
    }
    .product-card button {
      background-color: #007bff;
      color: white;
      border: none;
      padding: 8px 16px;
      margin-top: 10px;
      border-radius: 5px;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }
    .product-card button:hover {
      background-color: #0056b3;
    }
    #product-grid {
      margin-top: 20px;
    }
    @media screen and (max-width: 992px) {
      .product-card {
        width: calc(50% - 20px);
      }
    }
    @media screen and (max-width: 600px) {
      .product-card {
        width: 100%;
      }
    }
    .pagination {
      text-align: center;
      margin-top: 20px;
    }
    .pagination button {
      padding: 8px 12px;
      margin: 5px;
      border: none;
      background-color: #4CAF50;
      color: white;
      cursor: pointer;
      border-radius: 6px;
    }
    .pagination button:hover {
      background-color: #45a049;
    }
    /* Loader */
    #loader {
      position: fixed;
      top: 0; left: 0;
      width: 100%; height: 100%;
      background: rgba(255,255,255,0.8);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 9999;
    }
    #loader div {
      border: 8px solid #f3f3f3;
      border-top: 8px solid #007bff;
      border-radius: 50%;
      width: 60px;
      height: 60px;
      animation: spin 1s linear infinite;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>

  <!-- Loader -->
  <div id="loader"><div></div></div>

  <nav>
    <span class="menu-btn" onclick="toggleMenu()">☰</span>
    <h2 id="greeting">Loading...</h2>
  </nav>

  <div class="sidebar" id="sidebar">
    <h3 onclick="toggleMenu()">Menu</h3>
    <ul>
      <li onclick="tohome()">Home</li>
      <!-- <li>Shop</li> -->
      <li>Categories</li>
      <li onclick="window.location.href='/cart'">Cart</li>
      <li onclick="goToProfile()">Profile</li>
      <li onclick="logout()">Logout</li>
    </ul>
  </div>

  <div class="content">
    <h1 style="margin: 20px;">Featured Products</h1>
    <div id="product-grid" class="grid"></div>

    <div class="pagination">
      <button id="prev-btn" style="display: none;">Previous</button>
      <span id="page-indicator">Page 1 of 1</span>
      <button id="next-btn" style="display: none;">Next</button>
    </div>
  </div>

  <script>
    const token = localStorage.getItem('token');
    let products = [];
    let currentPage = 0;
    const itemsPerPage = 5;
    let cart = JSON.parse(localStorage.getItem('cart')) || [];

    function toggleMenu() {
      document.getElementById('sidebar').classList.toggle('active');
    }

    function tohome() {
      window.location.href = "/home";
    }
    function goToProfile() {
    fetch('/profile', {
      method: 'GET',
      headers: {
        'Authorization': localStorage.getItem('token')
      }
    })
    .then(response => response.text())
    .then(html => {
      document.open(); // clear current document
      document.write(html); // write new content
      document.close();
    })
    .catch(err => alert('Unauthorized or error loading profile.'));
  }
    function logout() {
      localStorage.removeItem('token');
      localStorage.removeItem('cart');
      window.location.href = "/";
    }

    function saveCart() {
      localStorage.setItem('cart', JSON.stringify(cart));
    }

    function getProductQuantity(id) {
      const item = cart.find(p => p.id === id);
      return item ? item.quantity : 0;
    }

    function addToCart(id) {
      const product = products.find(p => p.id === id);
      if (!product) return;
      const existingIndex = cart.findIndex(p => p.id === id);
      if (existingIndex === -1) {
        cart.push({ ...product, quantity: 1 });
      } else {
        cart[existingIndex].quantity++;
      }
      saveCart();
      displayProducts();
    }

    function updateQuantity(id, change) {
      const index = cart.findIndex(p => p.id === id);
      if (index !== -1) {
        cart[index].quantity += change;
        if (cart[index].quantity <= 0) {
          cart.splice(index, 1);
        }
        saveCart();
        displayProducts();
      }
    }

    function displayProducts() {
      const grid = document.getElementById('product-grid');
      grid.innerHTML = '';

      const start = currentPage * itemsPerPage;
      const end = start + itemsPerPage;
      const visibleProducts = products.slice(start, end);

      visibleProducts.forEach(product => {
        const quantity = getProductQuantity(product.id);

        // Create product card container
        const card = document.createElement('div');
        card.className = 'product-card';

        // Build inner HTML
        let cartControls = '';
        if (quantity === 0) {
          cartControls = `<button onclick="addToCart(${product.id})">Add to Cart</button>`;
        } else {
          cartControls = `
            <div style="display:flex;align-items:center;justify-content:center;gap:10px;">
              <button onclick="updateQuantity(${product.id}, -1)">-</button>
              <span>${quantity}</span>
              <button onclick="updateQuantity(${product.id}, 1)">+</button>
            </div>
          `;
        }

        card.innerHTML = `
          <img src="${product.image}" alt="${product.title}">
          <h3>${product.title}</h3>
          <p><strong>Description:</strong> ${product.description}</p>
          <p><strong>Category:</strong> ${product.category}</p>
          <p class="price"><strong>Price:</strong> $${product.price.toFixed(2)}</p>
          <p><strong>Rating:</strong> ${product.rating?.rate ?? 'N/A'} ⭐ (${product.rating?.count ?? 0} reviews)</p>
          ${cartControls}
        `;
        grid.appendChild(card);
      });

      const totalPages = Math.ceil(products.length / itemsPerPage);
      document.getElementById('page-indicator').textContent = `Page ${currentPage + 1} of ${totalPages}`;
      document.getElementById('prev-btn').style.display = currentPage > 0 ? 'inline-block' : 'none';
      document.getElementById('next-btn').style.display = (currentPage + 1 < totalPages) ? 'inline-block' : 'none';
    }

    function fetchProducts() {
      document.getElementById('loader').style.display = 'flex';

      fetch('/api/products', {
        method: 'GET',
        headers: { 'Authorization': token }
      })
      .then(res => {
        if (!res.ok) throw new Error('Failed to load products');
        return res.json();
      })
      .then(data => {
        products = data;
        currentPage = 0;
        displayProducts();
      })
      .catch(err => {
        console.error(err);
      })
      .finally(() => {
        document.getElementById('loader').style.display = 'none';
      });
    }

    document.getElementById('prev-btn').addEventListener('click', () => {
      if (currentPage > 0) {
        currentPage--;
        displayProducts();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }
    });

    document.getElementById('next-btn').addEventListener('click', () => {
      if ((currentPage + 1) * itemsPerPage < products.length) {
        currentPage++;
        displayProducts();
        window.scrollTo({ top: 0, behavior: 'smooth' });
      }
    });

    // Auth check and fetch
    if (!token) {
      alert("Please log in first.");
      window.location.href = "/";
    } else {
      fetch('/api/home', {
        method: 'GET',
        headers: { 'Authorization': token }
      })
      .then(res => {
        if (!res.ok) throw new Error('Unauthorized');
        return res.json();
      })
      .then(data => {
        document.getElementById('greeting').textContent = `Welcome, ${data.name}`;
      })
      .catch(err => {
        alert("Access denied or token expired.");
        window.location.href = "/";
      });

      fetchProducts();
    }
   
  </script>
</body>
</html>
